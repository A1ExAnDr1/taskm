name: CI/CD pipeline

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Prepare unit tests
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install -r requirements.txt
          pip install pytest
          pip install psycopg2-binary
          pip install pytest-asyncio
          pip install asyncpg

      - name: Run unit tests
        run: |
          PYTHONPATH=. pytest ./tests/unit

      - name: Prepare integration tests
        run: |
          sudo docker run --name pg-tests -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres:15.2
          rm ./.env
          echo "AMQP_URL=$AMQP_URL
          POSTGRES_URL=$POSTGRES_URL
          " > .env
          sleep 5
          alembic upgrade head
        env:
          AMQP_URL: amqp://guest:guest123@51.250.26.59:5672/
          POSTGRES_URL: postgresql://postgres:password@localhost:5432/postgres

      - name: Run integ tests
        run: |
          PYTHONPATH=. pytest ./tests/integ

  build_and_push_task_service:
    name: Build and push task service to Yandex Cloud
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          cd app/services/ && docker build -f Dockerfile . --tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/ms-task-services:latest --platform=linux/amd64

      - name: Login to Yandex Cloud
        uses: docker/login-action@v3.0.0
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_KEYS }}

      - name: Push tag to Yandex Cloud
        run: |
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/ms-task-services:latest


  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ build_and_push_task_service ]
    steps:
      - name: Deploy serverless container
        uses: yc-actions/yc-sls-container-deploy@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
          container-name: ${{ secrets.YC_CONTAINER_NAME }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/ms-task-services:latest
          revision-service-account-id: ${{ secrets.YC_SA_ID }}
          revision-env: |
            POSTGRES_URL=${{ secrets.ENV_POSTGRES_URL }}

