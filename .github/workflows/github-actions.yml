name: CI/CD pipeline

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Prepare unit tests
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install -r requirements.txt
          pip install pytest
          pip install psycopg2-binary
          pip install pytest-asyncio
          pip install asyncpg

      - name: Run unit tests
        run: |
          PYTHONPATH=. pytest ./tests/unit

      - name: Prepare integration tests
        run: |
          sudo docker run --name pg-tests -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres:15.2
          rm ./.env
          echo "AMQP_URL=$AMQP_URL
          POSTGRES_URL=$POSTGRES_URL
          " > .env
          sleep 5
          alembic upgrade head
        env:
          AMQP_URL: amqp://guest:guest123@51.250.26.59:5672/
          POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/postgres

      - name: Run integ tests
        run: |
          PYTHONPATH=. pytest ./tests/integ


  build-and-push-to-dh:
    name: Build and push to DockerHub
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3

      - name: Build docker image
        run: |
           docker build . --file Dockerfile --tag ${{ secrets.YC_REGISTRY_ID }}/ms-task-services:latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push tag to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/ms-task-services:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ build_and_push_task_service ]
    steps:
      - name: Deploy serverless container
        uses: yc-actions/yc-sls-container-deploy@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
          container-name: ${{ secrets.YC_CONTAINER_NAME }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/ms-task-services:latest
          revision-service-account-id: ${{ secrets.YC_SA_ID }}
          revision-env: |
            POSTGRES_URL=${{ secrets.ENV_POSTGRES_URL }}

